diff a/utils/settings.py b/utils/settings.py	(rejected hunks)
@@ -152,53 +152,66 @@ class AppConfig:
             if k not in d:
                 d[k] = v
         return d
 
     @staticmethod
     def from_dict(d: Dict[str, Any]) -> "AppConfig":
         # 알려진 섹션 추출
         bridge = dict(d.get("bridge", {}))
         gimbal = dict(d.get("gimbal", {}))
         relay  = dict(d.get("relay", {}))
         # 나머지 extras
         extras = {k: v for k, v in d.items() if k not in ("bridge", "gimbal", "relay")}
         ac = AppConfig(bridge=bridge, gimbal=gimbal, relay=relay, _extras=extras)
         # 기본값 주입/마이그레이션
         ac._inject_defaults()
         return ac
 
     # ---------- 섹션별 기본값 주입 ----------
 
     def _inject_defaults(self) -> None:
         # Bridge 기본값
         b = self.bridge
         b.setdefault("ip", "0.0.0.0")
         b.setdefault("tcp_port", 9999)
         b.setdefault("udp_port", 9998)
-        # 이미지 저장 폴더 (프로그램 아래 ./images)
-        b.setdefault("images", os.path.join(get_program_dir(), "images"))
-        ensure_dir(b["images"])
+        default_realtime = os.path.join(get_program_dir(), "SaveFile")
+        default_predefined = os.path.join(get_program_dir(), "PreDefinedImageSet")
+
+        if "realtime_dir" not in b:
+            if b.get("images"):
+                b["realtime_dir"] = b["images"]
+            else:
+                b["realtime_dir"] = default_realtime
+        if "predefined_dir" not in b:
+            b["predefined_dir"] = default_predefined
+
+        ensure_dir(b["realtime_dir"])
+        ensure_dir(b["predefined_dir"])
+
+        b.setdefault("image_source_mode", "realtime")
+        b["images"] = b["realtime_dir"]
         # GUI 미리보기 등
         b.setdefault("console_echo", True)         # 콘솔 로그 echo
         b.setdefault("show_hud", True)             # (옵션) 간단 상태 표시
         # req_capture / get_imgnum 페이로드 정책
         b.setdefault("use_1byte_payload_for_rcv", True)
 
         # Gimbal 기본값
         g = self.gimbal
         g.setdefault("enabled", True)
         g.setdefault("sensor_type", 0)             # 0: Camera
         g.setdefault("sensor_id", 0)
         g.setdefault("max_rate_deg_s", 60.0)       # 최대 각속도
         # 제너레이터(시뮬레이터) UDP 목적지
         g.setdefault("sim_ip", "127.0.0.1")
         g.setdefault("sim_port", 10706)            # gimbal ctrl 포트 가정 시 명시 사용
         g.setdefault("sim_power_port", 10707)      # power ctrl 포트 가정 시 명시 사용
         # system/component id (MAVLink 상호작용용 UI에서 사용)
         g.setdefault("sys_id", 1)
         g.setdefault("comp_id", 154)
         # 초기 포즈 (xyzrpy)
         g.setdefault("pose_xyzrpy", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
         g.setdefault("power_on", True)
         # Serial (임무컴퓨터용 MAVLink)
         g.setdefault("serial_port", "")
         g.setdefault("serial_baud", 115200)
