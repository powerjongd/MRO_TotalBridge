diff a/core/__init__.py b/core/__init__.py	(rejected hunks)
@@ -1,48 +1,48 @@
 # core/__init__.py
 # -*- coding: utf-8 -*-
 """
 Core layer public API.
 
-This package contains UI-agnostic services:
-- ImageBridgeCore: UDP image reassembly + TCP command server
-- GimbalControl:   MAVLink(Command Long) intake -> 10706 out (angle/rate controller)
-- UdpRelay:        UDP relay (raw/proc) with simple parse/transform hooks
+This package contains UI-agnostic services (MRO UnifiedBridge modules):
+- ImageStreamBridge: 영상 스트리밍(TCP 카메라 명령 + UDP 조립)
+- GimbalControl:     짐벌 제어 모듈
+- UdpRelay:          Gazebo/가상 센서 릴레이 모듈
 """
 
 from __future__ import annotations
 
 from typing import Protocol, runtime_checkable, Dict, Any
 
 
 @runtime_checkable
 class CoreService(Protocol):
     """Common lifecycle interface for headless services."""
 
     def start(self) -> None: ...
     def stop(self) -> None: ...
     def update_settings(self, settings: Dict[str, Any]) -> None: ...
 
 
 # Re-export concrete services (lazy-safe)
 try:
-    from .bridge_core import ImageBridgeCore  # noqa: F401
+    from .image_stream_bridge import ImageStreamBridge  # noqa: F401
 except Exception:  # pragma: no cover
-    ImageBridgeCore = None  # type: ignore
+    ImageStreamBridge = None  # type: ignore
 
 try:
     from .gimbal_control import GimbalControl  # noqa: F401
 except Exception:  # pragma: no cover
     GimbalControl = None  # type: ignore
 
 try:
     from .udp_relay import UdpRelay  # noqa: F401
 except Exception:  # pragma: no cover
     UdpRelay = None  # type: ignore
 
 
 __all__ = [
     "CoreService",
-    "ImageBridgeCore",
+    "ImageStreamBridge",
     "GimbalControl",
     "UdpRelay",
 ]
